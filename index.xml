<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>egujito</title>
    <link>https://egujito.github.io/</link>
    <description>Recent content on egujito</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://egujito.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CFF - C Fast Fetch - Developed with l0py2</title>
      <link>https://egujito.github.io/projects/cff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://egujito.github.io/projects/cff/</guid>
      <description>Github Repo
From README.md: üöÄ CFF - C Fast Fetch A fetch that aims to run as fast as possible. Developed for fun (and for GNU/Linux systems).
Blazingly fast üèéÔ∏èüí®
Building: $ make Cleaning: $ make clean Running (locally): $ ./cff Installing/Uninstalling: $ sudo make install $ sudo make uninstall Running: $ cff config.h Variables and Macros: LEFT_PAD: If you define icons in icons[], makes sure you set this to &amp;quot; &amp;quot; so the module name doesn&amp;rsquo;t stick to the icon.</description>
    </item>
    
    <item>
      <title>Dwm</title>
      <link>https://egujito.github.io/rice/dwm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://egujito.github.io/rice/dwm/</guid>
      <description>I do not use dwm currently but my build of dwm and dwmblocks can be found here: Github Repo
From README.md Suckless Software builds. My Rice: This repo contains my builds of:
DWM - The suckless window manager DWMBlocks - Status bar and module scripts DMenu - For now, it is default DWM A Very minimal build of dwm. Uses pywal colorscheme at colors-wal-dwm.h, patched to remove Urgent color scheme.</description>
    </item>
    
    <item>
      <title>Dwm vs Qtile</title>
      <link>https://egujito.github.io/topic/dwm-vs-qtile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://egujito.github.io/topic/dwm-vs-qtile/</guid>
      <description>Why I Changed from DWM to Qtile. Both managers are configured in the language they are built in that is why I love both so much. (DWM - C; Qtile - Python)
Pros of DWM Great default - DWM is great out of the box and if you want something simple you just create somekind of script to update xsetroot -name and you are good to go; Patches - Many patches have been released that extend the power of dwm; Fast; Solid Documentation - Documentation is great; Cons of DWM Patching - Patching comes as a pretty difficult task.</description>
    </item>
    
    <item>
      <title>Qtile</title>
      <link>https://egujito.github.io/rice/qtile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://egujito.github.io/rice/qtile/</guid>
      <description>Github Repo
Qtile running on my machine: Using exa to list the files and cff to fetch sys info.
Config file tree: . ‚îú‚îÄ‚îÄ autostart.sh -- script called with the startup_once hook ‚îú‚îÄ‚îÄ bar1.py -- bar configuration ‚îú‚îÄ‚îÄ config.py -- layouts and startup ‚îú‚îÄ‚îÄ consts.py -- constants ‚îú‚îÄ‚îÄ gruvbox.py -- colorscheme ‚îú‚îÄ‚îÄ keys.py -- keybindings ‚îî‚îÄ‚îÄ workspaces.py -- groups autostart.sh: The autostart calls 4 commands and it is called in config.</description>
    </item>
    
    <item>
      <title>Rusty Todo - TODO-TUI tracker written in Rust</title>
      <link>https://egujito.github.io/projects/rusty-todo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://egujito.github.io/projects/rusty-todo/</guid>
      <description>Github Repo
From README.md# rusty-todo I wanted to remake a project I had done that used ncurses.h in C, the code was messy and I didn&amp;rsquo;t have the patience to refactor it. So why not do rewrite it in rust as my first project?
(not finished yet)
rusty-todo in edit mode (InputState::Edit):
compiling and running Compile:
$ cargo build Compile &amp;amp; run:
$ cargo run Guide Managing tasks: Move upwards: k</description>
    </item>
    
  </channel>
</rss>
